<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.troytan.ymcake.repository.CommentMapper">
  <resultMap id="BaseResultMap" type="com.troytan.ymcake.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="COMMENT_ID" jdbcType="INTEGER" property="commentId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="PRODUCT_ID" jdbcType="INTEGER" property="productId" />
    <result column="rate" jdbcType="SMALLINT" property="rate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tt_comment
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.troytan.ymcake.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="commentId" order="AFTER" resultType="Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_comment (comment, USER_ID, ORDER_ID, 
      created_on, created_by, PRODUCT_ID, 
      rate)
    values (#{comment,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      now(), #{createdBy,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, 
      #{rate,jdbcType=SMALLINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.troytan.ymcake.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tt_comment
    set comment = #{comment,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=INTEGER},
      ORDER_ID = #{orderId,jdbcType=INTEGER},
      PRODUCT_ID = #{productId,jdbcType=INTEGER},
      rate = #{rate,jdbcType=SMALLINT}
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COMMENT_ID, comment, USER_ID, ORDER_ID, created_on, created_by, PRODUCT_ID, 
    rate
    from tt_comment
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COMMENT_ID, comment, USER_ID, ORDER_ID, created_on, created_by, PRODUCT_ID, 
    rate
    from tt_comment
  </select>
  
  <resultMap id="CommentVoResultMap" type="com.troytan.ymcake.vo.CommentVo">
    <id column="COMMENT_ID" jdbcType="INTEGER" property="commentId" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment" jdbcType="VARCHAR" property="text" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="description" jdbcType="VARCHAR" property="size" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
  </resultMap>
  
  <!-- 获取商品评价 -->
  <select id="listByProductId" resultMap="CommentVoResultMap">
    select comment.COMMENT_ID,comment.created_on as comment_date, comment.comment,comment.rate,
	 user.avatar_url, user.nickname,
	 ord.created_on as order_date,
	 size.description
	from tt_comment comment
	left join tm_user user on user.USER_ID = comment.USER_ID
	left join tt_order ord on ord.ORDER_ID = comment.ORDER_ID
	left join tt_size size on size.size_id=
        (select  size_id from tr_product_order pord 
        where pord.ORDER_ID=comment.ORDER_ID and pord.PRODUCT_ID=#{productId, jdbcType=DECIMAL} limit 1)
    where comment.PRODUCT_ID=#{productId, jdbcType=DECIMAL}
  </select>
</mapper>