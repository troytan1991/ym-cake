<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.troytan.ymcake.repository.OrderMapper">
  <resultMap id="BaseResultMap" type="com.troytan.ymcake.domain.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="DELIVERY_ID" jdbcType="INTEGER" property="deliveryId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="delivery_fee" jdbcType="DECIMAL" property="deliveryFee" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tt_order
    where ORDER_ID = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.troytan.ymcake.domain.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="orderId" order="AFTER" resultType="Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_order (status, price, created_on, 
      created_by, transaction_id, USER_ID, DELIVERY_ID, 
      remark, delivery_fee)
    values (#{status,jdbcType=SMALLINT}, #{price,jdbcType=DECIMAL}, now(), 
      #{createdBy,jdbcType=VARCHAR},
      #{transactionId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{deliveryId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{deliveryFee,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.troytan.ymcake.domain.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tt_order
    set status = #{status,jdbcType=SMALLINT},
      price = #{price,jdbcType=DECIMAL},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=INTEGER},
      DELIVERY_ID = #{deliveryId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      delivery_fee = #{deliveryFee,jdbcType=DECIMAL}
    where ORDER_ID = #{orderId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select ORDER_ID, status, price, created_on, created_by, updated_on, updated_by, transaction_id, 
    USER_ID, DELIVERY_ID, remark, delivery_fee
    from tt_order
    where ORDER_ID = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select ORDER_ID, status, price, created_on, created_by, updated_on, updated_by, transaction_id, 
    USER_ID, DELIVERY_ID, remark, delivery_fee
    from tt_order
  </select>
  
  <!-- 更新订单状态 -->
  <update id="updateStatusById">
    update tt_order set STATUS=#{status, jdbcType=SMALLINT}
    where ORDER_ID =#{orderId, jdbcType=DECIMAL}
  </update>
  <resultMap id="OrderVoResultMap" type="com.troytan.ymcake.vo.OrderVo">
    <id column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="DELIVERY_ID" jdbcType="INTEGER" property="deliveryId" />
    <result column="delivery_fee" jdbcType="DECIMAL" property="deliveryFee" />
    <collection ofType="com.troytan.ymcake.vo.OrderProductVo" property="productList">
        <result column="PRODUCT_ID" jdbcType="DECIMAL" property="productId" />
        <result column="count"  jdbcType="SMALLINT" property="count" />
        <result column="description"  jdbcType="VARCHAR" property="sizeDescription" />
        <result column="product_price"  jdbcType="DECIMAL" property="price" />
        <result column="name"  jdbcType="VARCHAR" property="name" />
        <result column="img_url"  jdbcType="VARCHAR" property="imgUrl" />
    </collection>
  </resultMap>
  <select id="selectByStatus" resultMap="OrderVoResultMap">
	select ord.ORDER_ID,ord.created_on,ord.status,ord.price,ord.DELIVERY_ID,ord.delivery_fee,
        pord.PRODUCT_ID, pord.count,
        size.description, size.price as product_price,
        product.name,product.img_url    
    from owcake.tt_order ord
        left join tr_product_order pord on pord.ORDER_ID = ord.ORDER_ID
        left join tt_product product on product.PRODUCT_ID = pord.PRODUCT_ID
        left join tt_size size on size.SIZE_ID = pord.SIZE_ID
	where 
	    <if test="status != -1">
	       ord.status=#{status, jdbcType=SMALLINT} and
	    </if> 
	    ord.USER_ID =#{userId, jdbcType=DECIMAL} and
	    ord.status != 200
	order by created_on desc
  </select>
  <select id="countOrderGroupByStatus" resultType="com.troytan.ymcake.dto.OrderCountDto">
	select count(status) as count,status from tt_order
	where status in (1,10,50,90) and 
	  USER_ID =#{userId, jdbcType=DECIMAL} and
	  status != 200
	group by status
  </select>
</mapper>